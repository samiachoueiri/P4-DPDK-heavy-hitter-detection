import matplotlib.pyplot as plt
from matplotlib.ticker import ScalarFormatter
import numpy as np

values_bt_rx =[
56425367699,
56426227967,
56427087969,
56427948630,
56428809360,
56429670945,
56430533941,
56431394636,
56432254317,
56433116285,
56433975263,
56434834812,
56435694052,
56436554453,
56437414390,
56438275823,
56439134633,
56439995690,
56440855650,
56441716037,
56442576300,
56443437031,
56444296670,
56445158040,
56446017202,
56446883496,
56447747031,
56448609708,
56449469110,
56450330317,
56451191270,
56452052323,
56452914047,
56453774701,
56454631999,
56455491180,
56456352226,
56457211959,
56458071844,
56458932440,
56459780299,
56460627352,
56461476572,
56462325106,
56463174643,
56464024260,
56464877682,
56465731122,
56466585499,
56467438723,
56468295530,
56469152254,
56470009320,
56470862824,
56471717650,
56472572939,
56473430294,
56474283569,
56475137283,
56475991444,
56476847631,
56477700177,
56478554308,
56479407560,
56480261979,
56481115692,
56481968176,
56482821677,
56483677134,
56484531422,
56485383523,
56486237594,
56487092942,
56487946084,
56488797560,
56489650207,
56490502011,
56491354716,
56492206289,
56493056710,
56493907978,
56494761673,
]

values_bt_tx =[
295981567503,
295982432831,
295983297118,
295984162341,
295985027617,
295985893642,
295986758016,
295987623505,
295988489701,
295989353609,
295990219052,
295991084194,
295991948529,
295992813125,
295993678142,
295994545006,
295995409382,
295996274289,
295997140009,
295998004254,
295998868945,
295999736041,
296000602054,
296001467853,
296002335680,
296003202730,
296004069465,
296004934898,
296005799120,
296006664121,
296007529765,
296008395259,
296009259562,
296010123336,
296010989662,
296011854850,
296012720634,
296013586048,
296014448911,
296015315299,
296016177350,
296017044945,
296017910088,
296018775493,
296019640280,
296020505763,
296021371375,
296022235862,
296023101027,
296023966055,
296024831260,
296025696786,
296026561593,
296027426873,
296028292211,
296029156729,
296030023009,
296030888016,
296031752934,
296032618353,
296033483919,
296034349917,
296035215422,
296036080442,
296036950716,
296037818564,
296038683366,
296039549342,
296040416296,
296041283549,
296042146008,
296043011413,
296043879185,
296044743530,
296045608089,
296046475868,
296047340546,
296048206031,
296049071295,
296049937802,
296050801898,
296051667285,
]

values_hh_rx =[
15018204952,
15018204952,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018204953,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
15018213209,
]

values_hh_tx =[
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148191819,
36148200395,
36148209099,
36148217675,
36148226379,
36148235083,
36148243659,
36148252363,
36148260939,
36148269643,
36148278347,
36148286923,
36148295627,
36148304331,
36148312907,
36148321611,
36148330187,
36148338891,
36148347595,
36148356299,
36148364875,
36148373579,
36148382283,
36148390859,
36148399563,
36148408139,
36148416843,
36148425547,
36148434251,
36148442955,
36148451531,
36148460235,
36148468939,
36148477643,
36148486347,
36148494923,
36148503627,
36148512331,
36148520907,
36148529611,
36148538315,
36148546891,
36148555595,
36148564299,
36148572875,
36148581579,
36148590283,
]

bt_rx = []
for i in range(len(values_bt_rx)-1):
    bt_rx.append((values_bt_rx[i+1] - values_bt_rx[i])/10000) 
bt_tx = []
for i in range(len(values_bt_tx)-1):
    bt_tx.append((values_bt_tx[i+1] - values_bt_tx[i])/10000) 
hh_rx = []
#for i in range(len(values_hh_rx)-1):
#    hh_rx.append((values_hh_rx[i+1] - values_hh_rx[i])/10000) 
hh_tx = []
for i in range(len(values_hh_tx)-1):
    hh_tx.append((values_hh_tx[i+1] - values_hh_tx[i])/10000)
    hh_rx.append((values_hh_rx[i+1] - values_hh_rx[i])/10000) 


time = np.arange(0, len(hh_tx) / 10, 0.1)

# Increase font size globally
plt.rcParams.update({'font.size': 18})
plt.figure(figsize=(8.5, 4))

plt.plot(time,bt_rx, label='Background traffic RX',color='#82AA45',linewidth=3, alpha=0.2)
plt.plot(time,bt_tx, label='Background traffic TX',color='#82AA45',linestyle='dotted',linewidth=3)
plt.plot(time,hh_rx, label='Heavy hitter RX',color='#95253B',linewidth=3)
plt.plot(time,hh_tx, label='Heavy hitter TX',color='#95253B',linestyle='dotted',linewidth=3)
# plt.plot(time,bt_rx, label='Background traffic RX',color='#82AA45')
# plt.plot(time,bt_tx, label='Background traffic TX',color='#82AA45',linestyle='dotted')
# plt.plot(time,hh_rx, label='Heavy hitter RX',color='#95253B')
# plt.plot(time,hh_tx, label='Heavy hitter TX',color='#95253B',linestyle='dotted')

plt.xlabel('Time (s)')
plt.ylabel('Throughput (Gbps)')
plt.xlim(0,8)
plt.ylim(-0.1,110)
# plt.title('Heavy hitter mitigation at line rate')
# plt.legend()
plt.legend(bbox_to_anchor=(0., 1.1005, 1, 0.05), loc="upper center", ncol=2, mode="expand", borderaxespad=0.,frameon=True)
plt.grid(True, linestyle='--')  # dashed grid lines
plt.yscale('symlog')
plt.gca().yaxis.set_major_formatter(ScalarFormatter(useMathText=True))
plt.tight_layout()
# plt.savefig('heavyhit.pdf')
# plt.savefig('heavyhit.png')
plt.show()

